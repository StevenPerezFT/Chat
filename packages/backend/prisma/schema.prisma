// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt DateTime  @updatedAt @db.Timestamp @map("updated_at")
  active    Boolean   @default(true)

  auth      Auth?

  @@map("user")
}

model Auth {
  id                String   @id @default(uuid()) @db.Uuid
  name              String   @db.VarChar(40)
  email             String   @unique @db.VarChar(256)
  hashedPassword    String   @db.VarChar(64) @map("hashed_password")
  userId            String?  @unique @db.Uuid @map("user_id")

  messages  Message[]
  authMessage  AuthMessage[]
  createdAt         DateTime @default(now()) @db.Timestamp @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")
  active            Boolean  @default(true)

  user              User?    @relation(fields: [userId], references: [id])

  @@map("auth")
}


model Message {
  id        String    @id @default(uuid()) @db.Uuid
  authId    String    @db.Uuid @map("auth_id")
  text      String
  createdAt DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt DateTime  @updatedAt @db.Timestamp @map("updated_at")
  active    Boolean   @default(true)

  auth      Auth      @relation(fields: [authId], references: [id])

  @@index(authId)
  @@map("message")
}

model AuthMessage {
  authId    String @db.Uuid @map("auth_id")
  auth      Auth   @relation(fields: [authId], references: [id])

  @@id(authId)
  @@index([authId])
  @@map("auth_message")
}
